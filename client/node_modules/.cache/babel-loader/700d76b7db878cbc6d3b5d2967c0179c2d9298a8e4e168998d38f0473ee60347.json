{"ast":null,"code":"var _jsxFileName = \"/Users/erik/Desktop/3.Letnik/PROJ/Projekt/src/components/InputComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../App.css\"; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputComponent = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    const imageUrl = URL.createObjectURL(file); // Create a URL for the uploaded image\n    setImage(file);\n    setImageUrl(imageUrl);\n  };\n  const handleSave = () => {\n    // Create an object with text and image data\n    const data = {\n      text: text,\n      image: image\n    };\n    // You can do whatever you want with the data here, like sending it to a server\n\n    // For demonstration, let's just log it to the console\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      type: \"text\",\n      placeholder: \"Enter text...\",\n      value: text,\n      onChange: handleTextChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"image-input\",\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Uploaded\",\n      className: \"uploaded-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-button\",\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(InputComponent, \"oOIkn452SpfAvGHM9QMglkxsODI=\");\n_c = InputComponent;\nexport default InputComponent;\nvar _c;\n$RefreshReg$(_c, \"InputComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InputComponent","_s","text","setText","image","setImage","imageUrl","setImageUrl","handleTextChange","e","target","value","handleImageChange","file","files","URL","createObjectURL","handleSave","data","console","log","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","accept","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/erik/Desktop/3.Letnik/PROJ/Projekt/src/components/InputComponent.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../App.css\"; // Import CSS file for styling\n\nconst InputComponent = () => {\n  const [text, setText] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n\n  const handleTextChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    const imageUrl = URL.createObjectURL(file); // Create a URL for the uploaded image\n    setImage(file);\n    setImageUrl(imageUrl);\n  };\n\n  const handleSave = () => {\n    // Create an object with text and image data\n    const data = {\n      text: text,\n      image: image,\n    };\n    // You can do whatever you want with the data here, like sending it to a server\n\n    // For demonstration, let's just log it to the console\n    console.log(data);\n  };\n\n  return (\n    <div className=\"input-container\">\n      <input\n        className=\"text-input\"\n        type=\"text\"\n        placeholder=\"Enter text...\"\n        value={text}\n        onChange={handleTextChange}\n      />\n      <input\n        className=\"image-input\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleImageChange}\n      />\n      {imageUrl && (\n        <img src={imageUrl} alt=\"Uploaded\" className=\"uploaded-image\" />\n      )}\n      <button className=\"save-button\" onClick={handleSave}>\n        Save\n      </button>\n    </div>\n  );\n};\n\nexport default InputComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMW,gBAAgB,GAAIC,CAAC,IAAK;IAC9BN,OAAO,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,iBAAiB,GAAIH,CAAC,IAAK;IAC/B,MAAMI,IAAI,GAAGJ,CAAC,CAACC,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMR,QAAQ,GAAGS,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC,CAAC,CAAC;IAC5CR,QAAQ,CAACQ,IAAI,CAAC;IACdN,WAAW,CAACD,QAAQ,CAAC;EACvB,CAAC;EAED,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvB;IACA,MAAMC,IAAI,GAAG;MACXhB,IAAI,EAAEA,IAAI;MACVE,KAAK,EAAEA;IACT,CAAC;IACD;;IAEA;IACAe,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB,CAAC;EAED,oBACEnB,OAAA;IAAKsB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BvB,OAAA;MACEsB,SAAS,EAAC,YAAY;MACtBE,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,eAAe;MAC3Bb,KAAK,EAAET,IAAK;MACZuB,QAAQ,EAAEjB;IAAiB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF9B,OAAA;MACEsB,SAAS,EAAC,aAAa;MACvBE,IAAI,EAAC,MAAM;MACXO,MAAM,EAAC,SAAS;MAChBL,QAAQ,EAAEb;IAAkB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EACDvB,QAAQ,iBACPP,OAAA;MAAKgC,GAAG,EAAEzB,QAAS;MAAC0B,GAAG,EAAC,UAAU;MAACX,SAAS,EAAC;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAChE,eACD9B,OAAA;MAAQsB,SAAS,EAAC,aAAa;MAACY,OAAO,EAAEhB,UAAW;MAAAK,QAAA,EAAC;IAErD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAnDID,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAqDpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}