{"ast":null,"code":"var _jsxFileName = \"/Users/erik/Desktop/3.Letnik/PROJ/Projekt/client/src/components/InputComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputComponent() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n  const handleImageChange = e => {\n    setImage(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"text\", text);\n    formData.append(\"image\", image);\n    try {\n      const response = await fetch(\"http://localhost:3000/tweet\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        alert(\"Tweet posted successfully!\");\n      } else {\n        alert(\"Error posting tweet.\");\n      }\n    } catch (error) {\n      console.error(\"Error posting tweet:\", error);\n      alert(\"Error posting tweet.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: handleTextChange,\n      placeholder: \"Enter your text\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageChange,\n      accept: \"image/*\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(InputComponent, \"Fy+XUedRojF/EDeSkqfwS5Kmr4k=\");\n_c = InputComponent;\nexport default InputComponent;\nvar _c;\n$RefreshReg$(_c, \"InputComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InputComponent","_s","text","setText","image","setImage","handleTextChange","e","target","value","handleImageChange","files","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","alert","error","console","onSubmit","children","onChange","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","_c","$RefreshReg$"],"sources":["/Users/erik/Desktop/3.Letnik/PROJ/Projekt/client/src/components/InputComponent.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction InputComponent() {\n  const [text, setText] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  const handleTextChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleImageChange = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"text\", text);\n    formData.append(\"image\", image);\n\n    try {\n      const response = await fetch(\"http://localhost:3000/tweet\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (response.ok) {\n        alert(\"Tweet posted successfully!\");\n      } else {\n        alert(\"Error posting tweet.\");\n      }\n    } catch (error) {\n      console.error(\"Error posting tweet:\", error);\n      alert(\"Error posting tweet.\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <textarea\n        value={text}\n        onChange={handleTextChange}\n        placeholder=\"Enter your text\"\n        required\n      />\n      <input\n        type=\"file\"\n        onChange={handleImageChange}\n        accept=\"image/*\"\n        required\n      />\n      <button type=\"submit\">Post</button>\n    </form>\n  );\n}\n\nexport default InputComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,iBAAiB,GAAIH,CAAC,IAAK;IAC/BF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEd,IAAI,CAAC;IAC7BY,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEZ,KAAK,CAAC;IAE/B,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACfC,KAAK,CAAC,4BAA4B,CAAC;MACrC,CAAC,MAAM;QACLA,KAAK,CAAC,sBAAsB,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CD,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEvB,OAAA;IAAM0B,QAAQ,EAAEb,YAAa;IAAAc,QAAA,gBAC3B3B,OAAA;MACEU,KAAK,EAAEP,IAAK;MACZyB,QAAQ,EAAErB,gBAAiB;MAC3BsB,WAAW,EAAC,iBAAiB;MAC7BC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFlC,OAAA;MACEmC,IAAI,EAAC,MAAM;MACXP,QAAQ,EAAEjB,iBAAkB;MAC5ByB,MAAM,EAAC,SAAS;MAChBN,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFlC,OAAA;MAAQmC,IAAI,EAAC,QAAQ;MAAAR,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEX;AAAChC,EAAA,CArDQD,cAAc;AAAAoC,EAAA,GAAdpC,cAAc;AAuDvB,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}